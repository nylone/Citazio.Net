/*
CREATE DATABASE THEYSAID;
USE THEYSAID;
CREATE USER THEYSAID@'LOCALHOST' IDENTIFIED BY 'THEYSAID';
GRANT ALL PRIVILEGES ON THEYSAID.* TO THEYSAID@'LOCALHOST';
*/

DROP DATABASE THEYSAID;
CREATE DATABASE THEYSAID;
USE THEYSAID;

CREATE OR REPLACE TABLE SIGNUP_TOKENS
(
    TOKEN_ID   BIGINT UNSIGNED                       NOT NULL PRIMARY KEY,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP() NOT NULL,
    EXPIRES_AT TIMESTAMP
);

CREATE OR REPLACE TABLE USERS
(
    USER_ID    SERIAL PRIMARY KEY,
    USERNAME   VARCHAR(25)                           NOT NULL UNIQUE,
    NICKNAME   VARCHAR(25)                           NOT NULL UNIQUE,
    PHC        TINYTEXT                              NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP() NOT NULL,
    TOKEN_ID   BIGINT UNSIGNED                       NOT NULL REFERENCES SIGNUP_TOKENS (TOKEN_ID)
);

CREATE OR REPLACE TABLE BOARDS
(
    BOARD_ID   SERIAL PRIMARY KEY,
    ADMIN_ID   BIGINT UNSIGNED                       NOT NULL REFERENCES USERS (USER_ID),
    PATH       VARCHAR(25) UNIQUE KEY                NOT NULL,
    NAME       VARCHAR(25)                           NOT NULL,
    ACCESS_LVL BIT(2)                                NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP() NOT NULL
);

CREATE OR REPLACE TABLE BOARDS_TO_USERS
(
    ID       SERIAL PRIMARY KEY,
    BOARD_ID BIGINT UNSIGNED NOT NULL REFERENCES BOARDS (BOARD_ID),
    USER_ID  BIGINT UNSIGNED NOT NULL REFERENCES USERS (USER_ID),
    CONSTRAINT UNIQUE (BOARD_ID, USER_ID)
);
CREATE OR REPLACE TABLE QUOTES
(
    QUOTE_ID   SERIAL PRIMARY KEY,
    BOARD_ID   BIGINT UNSIGNED                       NOT NULL REFERENCES BOARDS (BOARD_ID),
    USER_ID    BIGINT UNSIGNED                       NOT NULL REFERENCES USERS (USER_ID),
    QUOTE      JSON                                  NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP() NOT NULL
);

DELIMITER //

CREATE OR REPLACE PROCEDURE ADD_BOARD(IN NAME VARCHAR(25), IN CREATOR_ID BIGINT UNSIGNED, IN PUBLIC BOOLEAN)
BEGIN
    INSERT INTO BOARDS(CREATOR_ID, NAME, PUBLIC) VALUE (CREATOR_ID, NAME, PUBLIC);
    SELECT LAST_INSERT_ID() AS BOARD_ID;
END//

CREATE OR REPLACE PROCEDURE ADD_QUOTE(IN QUOTE JSON, IN BOARD_ID BIGINT UNSIGNED, IN USER_ID BIGINT UNSIGNED)
BEGIN
    INSERT INTO QUOTES(BOARD_ID, USER_ID, QUOTE) VALUE (BOARD_ID, USER_ID, QUOTE);
    SELECT LAST_INSERT_ID() AS QUOTE_ID;
END//

CREATE OR REPLACE PROCEDURE ADD_USER(IN USERNAME VARCHAR(25), IN PHC TINYTEXT, IN NICKNAME VARCHAR(25),
                                     IN TOKEN_ID BIGINT UNSIGNED)
BEGIN
    INSERT INTO USERS (USERNAME, PHC, NICKNAME, TOKEN_ID) VALUE (USERNAME, PHC, NICKNAME, TOKEN_ID);
    SELECT LAST_INSERT_ID() AS USER_ID;
END//

CREATE OR REPLACE PROCEDURE GET_QUOTES(IN FETCH_START BIGINT UNSIGNED, IN FETCH_NUMBER BIGINT UNSIGNED,
                                       IN BOARD_ID BIGINT UNSIGNED, IN USER_ID BIGINT UNSIGNED)
BEGIN
    SELECT Q.QUOTE, Q.USER_ID, Q.CREATED_AT
    FROM BOARDS_TO_USERS B2U
             INNER JOIN QUOTES Q ON Q.BOARD_ID = B2U.BOARD_ID
    WHERE B2U.BOARD_ID = BOARD_ID
      AND B2U.USER_ID = USER_ID
    LIMIT FETCH_START, FETCH_NUMBER;
END//

CREATE OR REPLACE PROCEDURE GET_PHC_FROM_USERNAME(IN USERNAME VARCHAR(25))
BEGIN
    SELECT PHC FROM USERS U WHERE U.USERNAME = USERNAME;
END//

CREATE OR REPLACE PROCEDURE GET_USER_FROM_ID(IN ID BIGINT UNSIGNED)
BEGIN
    SELECT * FROM USERS U WHERE U.USER_ID = ID;
END//

CREATE OR REPLACE PROCEDURE GET_USER_FROM_USERNAME(IN USERNAME VARCHAR(25))
BEGIN
    SELECT * FROM USERS U WHERE U.USERNAME = USERNAME;
END//

DELIMITER ;